@model tw.com.essentialoil.ShoppingCart.ViewModels.CShoppingCart

<style>
    .hide{
        display:none;
    }

    .container {
        margin-top: 20px;
    }

    tr.active {
        background: lightblue;
    }

    .productSum {
        color: red
    }

    .numberPlus {
        height: 40px;
        width: 40px;
    }

    .numberMinus {
        height: 40px;
        width: 40px;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
    }

    input[type="number"] {
        -moz-appearance: textfield;
    }
</style>
@{
    ViewBag.Title = "viewCart";
    double totalPrice = 0;
}

<div style="width:70%;text-align:center;margin:auto;padding-top:0px;">
    <img src="~/Images/ShoppingCart/bulletin.png" style="height:180px;width:700px" />
</div>
<div style="width:85%;text-align:right">
    <a class="btn btn-primary" style="color:black;margin-bottom:10px;" onclick="doubleCheckAll()">清空購物車</a>
</div>
<div style="width:70%;text-align:center;margin:auto;padding-top:5px;">
    @using (Html.BeginForm())
    {
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th style="width:5%" class="">
                        <input type="checkbox" id="checkAll" class="checkbox" />
                    </th>
                    <th style="width:15%">
                        圖片
                    </th>
                    <th style="width:15%">
                        商品名稱
                    </th>
                    <th style="width:10%">
                        單價
                    </th>
                    <th style="width:20%">
                        數量
                    </th>
                    <th style="width:20%">
                        小計
                    </th>
                    <th style="width:20%">

                    </th>
                </tr>
            </thead>
            <tbody style="height:100px;line-height:100px;">
                @foreach (var item in Model.ShoppingCart)
                {
                    var imageScr = $"/Images/Product/{item.fProductID}.jpg";
                    var producthref = $"/ProductFront/ProductSinglePage?productId={item.fProductID}";

                    <tr data-id="@item.fBasketId">
                        <td>
                            <input type="checkbox" />
                        </td>
                        <td>
                            <img src="@imageScr" style="height:100px;width:100px" />
                        </td>
                        <td>
                            <a href="@producthref" style="color:royalblue">@Html.DisplayFor(modelItem => item.tProduct.fProductChName)</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.tProduct.fUnitPrice)
                        </td>
                        <td>
                            <input type="button" class="btn btn-secondary numberMinus" value="-" />
                            <input type="hidden" class="txtStock" value="@item.tProduct.fUnitsInStock" />
                            <input type="number" class="txtNum" value="@item.fQuantity" max="@item.tProduct.fUnitsInStock" min="1" pattern=".{1,}" style="text-align: center;width:60px;height:40px;" />
                            <input type="button" class="btn btn-secondary numberPlus" value="+" />

                        </td>
                        <td>
                            <span class="productSum">
                                @(item.fQuantity * (double)item.tProduct.fUnitPrice)
                            </span>
                        </td>
                        <td>
                            <a class="btn btn-warning" onclick="addToFavorite(@item.fProductID)">收藏</a>
                            <a class="btn btn-danger" onclick="doubleCheck(@item.fBasketId)">刪除</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div style="text-align:right;font-size:24px;border-top:1px dashed black;padding:15px">
            折扣方式 :
            <select style="text-align:center;" id="discount">
                <option>無</option>
                <option>積分</option>
                <option>優惠券</option>
            </select>
            <span id="score">
                <input type="number" name="score" value="0" min="0" style="text-align:center"/>
                @foreach (var item in Model.UserProfiles)
                 {
                    <input type="hidden" value="@item.fScore" name="memberScore"/>
                 }
                </span>
            <span id="coupon">
                <select name="selectcoupon">
                    <option>無</option>
                    @foreach (var item in Model.UserDiscountLists)
                    {
                        <option value="@item.fDiscountCode">@item.tDiscount.fDiscountName</option>
                    }
                </select>
                <input type="hidden" name="coupon" value="無"/>
            </span>
        </div>
        <div style="text-align:right;font-size:32px;border-top:1px dashed black;padding:15px">
            總共
            <span class="cartSumCount" style="color:red">0</span>
            項商品，商品總計
            <span class="cartSumPrice" style="color:red">
                @totalPrice
            </span>
            <span>
                ，折扣後商品金額為
            </span>
            <span class="totalSumPrice" style="color:red">

            </span>
        </div>
        <div style="text-align:right;border-top:1px dashed black;padding:15px;text-align:center">
            @Html.ActionLink("<<繼續購物", "ProductFrontPage", "ProductFront", null, new { @class = "btn btn-info", style = "font-size:36px;" })
            <input type="hidden" id="orderUrl" name="url" />
            <input type="submit" id="toOrder" value="確認購買>>" class="btn btn-danger" style="font-size:36px" />
        </div>
    }
</div>
<br />
<h2 style="text-align:center">瀏覽紀錄</h2>
<div style="height:240px;width:70%;margin:auto;display:flex;margin-bottom:50px;background-color:aliceblue">
    @foreach (var item in Model.BrowseHistory.OrderByDescending(t=>t.fBrowseTime).Take(7))
    {
        var imageScr = $"/Images/Product/{item.fProductId}.jpg";
        var producthref = $"/ProductFront/ProductSinglePage?productId={item.fProductId}";

        <a href="@producthref" style="border:2px solid;">
            <div style="display:block;margin:20px;text-align:center;">
                <img src="@imageScr" style="height:150px;width:150px;" />
                <div style="text-align:center;margin:4px;font-size:20px;">
                    @item.tProduct.fProductChName
                </div>
                <div style="text-align:center;margin:4px;font-size:16px;">
                    $ @item.tProduct.fUnitPrice
                </div>
            </div>
        </a>
    }
</div>


@section scripts{
<script>

    $(document).ready(function () {
        $("#toOrder").prop("disabled", true);               //關掉送出訂單按鈕
        $("#discount").prop("disabled", true);             //鎖住選擇優惠欄位
        $("#score").hide();                                 //隱藏積分欄位
        $("#coupon").hide();                                //隱藏優惠券欄位
    })

    //商品數量減少
    $(".numberMinus").click(function () {
        let num = $(this).siblings(".txtNum").val();        //目前商品數量
        let numStock = $(this).siblings(".txtStock").val(); //目前商品存貨數量
        let productPrice = $(this).parent().prev().text();  //目前商品價格

        if (num <= 1) {
            $(this).prop("disabled", true);                 //關掉減少按鈕
        }
        else {
            num--;
            $(this).siblings(".txtNum").val(num);                           //減少的值傳給數量欄位
            $(this).parent().next().text(num * parseInt(productPrice));     //小計更新
            $(this).parent().next().addClass("productSum")                  //小計的顏色變成紅色(上面更新會蓋過格式)

            if (num < parseInt(numStock)) {
                $(this).siblings(".numberPlus").prop("disabled", false);    //打開增加按鈕
            }

            tatalResult();
            scoreMax();
            saveToDB();
        }
    })
    //商品數量增加
    $(".numberPlus").click(function () {
        let num = $(this).siblings(".txtNum").val();        //目前商品數量
        let numStock = $(this).siblings(".txtStock").val(); //目前商品存貨數量
        let productPrice = $(this).parent().prev().text();  //目前商品價格

        if (num < parseInt(numStock)) {
            num++;
            $(this).siblings(".txtNum").val(num);                           //增加的值傳給數量欄位
            $(this).parent().next().text(num * parseInt(productPrice));     //小計更新
            $(this).parent().next().addClass("productSum")                  //小計的顏色變成紅色(上面更新會蓋過格式)

            if (num > 0)
            {
                $(this).siblings(".numberMinus").prop("disabled", false);   //打開減少按鈕
            }

            tatalResult();
            scoreMax();
            saveToDB();
        }
        else {
            $(this).prop("disabled", true);                                 //關掉增加按鈕
        }
    })
    //勾選單項商品(執行替換背景顏色、計算商品總數量與價格、將購物車Id存入input、檢查是否有選項被勾選)
    let rowConut = $("tbody tr").length;                        //全部商品項數
    $("tbody :checkbox").click(function () {
        let checked = $(this).prop("checked")                   //勾選狀態
        let checkedRow = $("tbody :checked").length;            //目前選擇項數
        let sum = $(".cartSumPrice").text()                     //總價

        if (checked) {                                          //如果是勾選
            $(this).parent().parent().addClass("active")        //勾選的背景顏色替換
        }
        else {                                                  //如果是取消勾選
            $(this).parent().parent().removeClass("active")     //沒勾選的回到原本背景
        }

        if (rowConut == checkedRow) {
            $("#checkAll").prop("checked", true)                //如果目前選擇項數等於全部商品項數，將全部勾選的選項打勾
        } else {
            $("#checkAll").prop("checked", false)               //如果目前選擇項數沒有等於全部商品項數，將全部勾選的選項取消打勾
        }
        tatalResult();
        totalProductId();
        totalChecked();
    })
    //勾選所有商品
    $("#checkAll").click(function () {
        let checked = $(this).prop("checked")                   //確認全部勾選的選項狀態
        $("tbody :checkbox").prop("checked", checked)           //將所有商品狀態換成跟全部勾選的選項狀態一樣

        if (checked) {
            $("tbody tr").addClass("active")                    //將所有商品背景顏色替換
        } else {
            $("tbody tr").removeClass("active")                 //移除所有商品背景顏色替換
        }
        tatalResult();
        totalProductId();
        totalChecked();
    })
    //當數量欄位被鍵盤修改時
    $(".txtNum").change(function () {
        if (parseInt($(this).val()) > 0 && parseInt($(this).val()) < parseInt($(this).siblings(".txtStock").val())) {
            $(this).val()
        }
        else
        {
            $(this).val(1)                                                                  //如果值不屬於範圍區間，則返回1
        }

        let productPrice = $(this).parent().prev().text();                                  //目前商品價格
        $(this).parent().next().text($(this).val() * parseInt(productPrice));               //小計修改
        $(this).parent().next().addClass("productSum");
    })
    //計算總價 & 總數量 (將有打勾的商品全部加總)
    function tatalResult() {
        let totalSumPrice = 0;
        let totalSumCount = 0;
        $("tbody :checkbox").each(function () {
            let checked = $(this).prop("checked")                                                  //每個checkbox狀態
            if (checked) {
                let productCount = $(this).parent().parent().find(".txtNum").val();                //商品數量
                let productUnitPrice = parseInt($(this).parent().next().next().next().text());     //商品單價
                totalSumCount += parseInt(productCount);                                           //數量加到總數量
                totalSumPrice += productCount * productUnitPrice;                                  //價錢加到總價
            }
        })
        $(".cartSumCount").text(totalSumCount);                                                    //更新總數量
        $(".cartSumPrice").text(totalSumPrice);                                                    //更新總價
        $(".totalSumPrice").text(totalSumPrice);     
    }
    //勾選商品後將勾選的數量存進購物車&將勾選的購物車的Id存入隱藏input
    function totalProductId() {
        let totalBasketId = "";
        $("tbody :checkbox").each(function () {
            let checked = $(this).prop("checked");
            if (checked) {
                let basketId = $(this).parent().parent().attr("data-id");   //讀取購物車Id
                totalBasketId = totalBasketId + basketId + "_";             //將讀取到的Id加入到totalBasketId
            }
        })
        $("#orderUrl").val(totalBasketId);                                  //將購物車的Id存入隱藏input內(要被submit傳遞)
    }
    //檢查是否有商品被勾選(如果有就解鎖送出訂單)
    function totalChecked() {
        let count = 0;                                                      //計算被勾選數量
        $("tbody :checkbox").each(function () {
            let checked = $(this).prop("checked");
            if (checked) {
                count++;
                $(this).parent().next().next().next().next().find(".txtNum").prop("readonly", true)
            }
            else
            {
                $(this).parent().next().next().next().next().find(".txtNum").prop("readonly", false)
            }
        })
        if (count != 0)
        {
            $("#toOrder").prop("disabled", false);
            $("#discount").prop("disabled", false);
            saveToDB();
        }
        else
        {
            $("#toOrder").prop("disabled", true);
            $("#discount").prop("disabled", true);
            $("#score").hide();
            $("#coupon").hide();
            $("#discount")[0].selectedIndex = 0;
            $("input[name=score]").val(0);
            $("input[name=coupon]").val("無");
        }
    }
    //Ajax:儲存到資料庫
    function saveToDB() {
        $("tbody :checkbox").each(function () {
            let basketId = $(this).parent().parent().attr("data-id");                                           //購物車Id
            let quantity = parseInt($(this).parent().next().next().next().next().find(".txtNum").val());        //數量

            $.ajax({
                type: 'POST',
                url:'@Url.Action("editCart", "ShoppingCart")',
                data: { basketId: basketId, quantity: quantity}
            })
        })
    }
    //送出submit後儲存DB(No Ajax)
    $("form").submit(function () {
            $("tbody :checkbox").each(function () {
            let basketId = $(this).parent().parent().attr("data-id");                                           //購物車Id
            let quantity = parseInt($(this).parent().next().next().next().next().find(".txtNum").val());        //數量

            $.ajax({
                type: 'POST',
                url:'@Url.Action("editCart", "ShoppingCart")',
                data: { basketId: basketId, quantity: quantity },
                async: false                                                                                    //取消同步
            })
        })
    })
    //Ajax : 加入收藏清單
    function addToFavorite(productId) {
        $.ajax({
            type: 'POST',
            url:'@Url.Action("Creat", "ProductFavorite")',
            data: { productId : productId}
        })
    }
    //清空購物車(確認後執行)
    function doubleCheckAll() {
        let c = confirm('確定要清空購物車嗎?');
        if (c == true) {
            location.href = `@Url.Action("deleteAll", "ShoppingCart")`;
        }
    }
    //刪除購物車(確認後執行)
    function doubleCheck(fBasketId) {
        let c = confirm('確定要刪除嗎?');
        if (c == true) {
            location.href = `/ShoppingCart/delete?basket=${fBasketId}`;
        }
    }
    //選擇優惠方式
    $("#discount").change(function () {
        if ($(this).val() == "無") {
            $("#score").hide();
            $("#coupon").hide();
            $("input[name='score']").val(0);
            $("input[name=coupon]").val("無");
        }
        else if ($(this).val() == "積分") {
            $("#score").show();
            $("#coupon").hide();
            scoreMax();
        }
        else if ($(this).val() == "優惠券"){
            $("#score").hide();
            $("#coupon").show();
            $("input[name='score']").val(0);
        }
    })
    function scoreMax() {
        let sum = parseInt($(".cartSumPrice").text());
        $("input[name='score']").attr("max", sum * 0.1);
    }
    $("input[name='score']").change(function () {
        let score = parseInt( $("input[name='score']").val());
        let memberScore = parseInt($("input[name='memberScore']").val());
        let totalMoney = parseInt($(".cartSumPrice").text());

        if (score > memberScore) {
            alert("會員積分不夠");
            $("input[name='score']").val(0)
        }
        else {
            $(".totalSumPrice").text(totalMoney - score);
            $("input[name='coupon']").val("無");
        }
    })
    $("select[name='selectcoupon']").change(function () {
        let discountCode = $(this).val();
        let totalMoney = parseInt($(".cartSumPrice").text());

        if (discountCode != "無") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getDiscountValue", "ShoppingCart")',
                async: false,
                data: { discountCode: discountCode, totalMoney: totalMoney }
            }).done(function (data) {
                alert(data.message);
                if (data.message == "已成功使用優惠券") {
                    $(this)[0].selectedIndex = 0;
                }
                $(".totalSumPrice").text(data.returnNum);
                $("input[name='coupon']").val(discountCode);
            })
        }
        else {
            $(".totalSumPrice").text(totalMoney);
            $("input[name='coupon']").val("無");
        }
    })
</script>
}
